{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenID Conformance Suite REST APIs",
    "description": "This page lists the REST APIs for the OpenID Conformance suite. You must obtain a token from the <a href='/tokens.html'>token management page</a> to call APIs. There is a <a href='https://gitlab.com/openid/conformance-suite/-/blob/master/scripts/run-test-plan.py'>python script that drives the API</a> available, which is used in our own CI and provides functionality like allowing known failures to be suppressed.",
    "license": {
      "name": "MIT License",
      "url": "https://gitlab.com/openid/conformance-suite/-/blob/master/LICENSE.txt"
    },
    "version": "5.1.28"
  },
  "externalDocs": {
    "description": "OpenID Conformance Wiki Documentation",
    "url": "https://gitlab.com/openid/conformance-suite/-/wikis/home"
  },
  "servers": [
    {
      "url": "https://www.certification.openid.net",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "test-runner",
      "description": "A component that starts, stops, and manages running TestModules"
    }
  ],
  "paths": {
    "/api/token": {
      "get": {
        "tags": [
          "token-api"
        ],
        "summary": "Get a list of existing tokens",
        "operationId": "getAllTokens",
        "responses": {
          "200": {
            "description": "Retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "token-api"
        ],
        "summary": "Create new token",
        "operationId": "createToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonObject"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created token successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "To create a token, you must not be an admin",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/runner": {
      "post": {
        "tags": [
          "test-runner"
        ],
        "summary": "Create test module instance",
        "description": "Normally a test plan should be created first. After a test is created, use /api/info/{testid} to wait for the test to be in the WAITING state before trying to interact with the test",
        "operationId": "createTest",
        "parameters": [
          {
            "name": "test",
            "in": "query",
            "description": "Test name, use to identify a specific TestModule",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plan",
            "in": "query",
            "description": "Plan Id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "variant",
            "in": "query",
            "description": "Kind of test variation",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonObject"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "You shouldn't supply a configuration when creating a test from a test plan / You should supply a configuration when creating individual test module",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Couldn't find configuration of plan Id you provided",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "409": {
            "description": "There was a failure in creating the test alias",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created test successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Created test failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/runner/{id}": {
      "get": {
        "tags": [
          "test-runner"
        ],
        "summary": "Get test status, results, and exposed strings",
        "operationId": "getTestStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of test that you want to get status",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "404": {
            "description": "The test you were trying to retrieve is not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "test-runner"
        ],
        "summary": "Start test by id",
        "operationId": "startTest",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of test that you want to run",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "The test you were trying to run is not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "200": {
            "description": "Started test successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "test-runner"
        ],
        "summary": "Cancel test by Id",
        "operationId": "cancelTest",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of test that you want to cancel",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cancelled test successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "The test you were trying to cancel is not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/runner/browser/{id}/visit": {
      "post": {
        "tags": [
          "test-runner"
        ],
        "summary": "Mark front-channel external URL as visited",
        "operationId": "visitBrowserUrl",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of test",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "url",
            "in": "query",
            "description": "Url which you want to visit",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "503": {
            "description": "Couldn't find Browser information",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "Visited url successfully",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "The test you were trying to retrieve is not found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/plan": {
      "get": {
        "tags": [
          "test-plan-api"
        ],
        "summary": "Get a list of test plan instances with paging",
        "operationId": "getTestPlansForCurrentUser",
        "parameters": [
          {
            "name": "public",
            "in": "query",
            "description": "Published data only",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PaginationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "test-plan-api"
        ],
        "summary": "Create test plan",
        "operationId": "createTestPlan",
        "parameters": [
          {
            "name": "planName",
            "in": "query",
            "description": "Plan name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "variant",
            "in": "query",
            "description": "Kind of test variation",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonObject"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Couldn't find test plan for provided plan name",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created test plan successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/plan/{id}/publish": {
      "post": {
        "tags": [
          "test-plan-api"
        ],
        "summary": "Publish a test plan by plan Id",
        "operationId": "publishTestPlan",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of test plan that you want publish",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonObject"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "'publish' value is not valid or couldn't find test plan by provided plan Id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "'publish' field is missing or its value is not JsonPrimitive",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "200": {
            "description": "Published test plan successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/plan/{id}/makemutable": {
      "post": {
        "tags": [
          "test-plan-api"
        ],
        "summary": "Make a test plan mutable again (requires administrator privileges)",
        "operationId": "makeTestPlanMutable",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of test plan that you want make mutable again",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Made the test plan mutable again successfully",
            "content": {
              "text/html": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized",
            "content": {
              "text/html": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Could not find plan",
            "content": {
              "text/html": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/plan/{id}/certificationpackage": {
      "post": {
        "tags": [
          "log-api"
        ],
        "summary": "Prepare certification package for a test plan. Also publishes the plan and marks it as immutable.",
        "operationId": "prepareCertificationPackageForTestPlan",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of test plan",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "certificationOfConformancePdf"
                ],
                "type": "object",
                "properties": {
                  "certificationOfConformancePdf": {
                    "type": "string",
                    "description": "Signed certification of conformance pdf",
                    "format": "binary"
                  },
                  "clientSideData": {
                    "type": "string",
                    "description": "Client data in zip format. Only required for RP tests",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Could not publish plan",
            "content": {
              "application/zip": {
                "schema": {
                  "$ref": "#/components/schemas/StreamingResponseBody"
                }
              }
            }
          },
          "404": {
            "description": "Could not find a plan with the given id",
            "content": {
              "application/zip": {
                "schema": {
                  "$ref": "#/components/schemas/StreamingResponseBody"
                }
              }
            }
          },
          "422": {
            "description": "Could not mark the plan as immutable",
            "content": {
              "application/zip": {
                "schema": {
                  "$ref": "#/components/schemas/StreamingResponseBody"
                }
              }
            }
          },
          "200": {
            "description": "Prepared successfully",
            "content": {
              "application/zip": {
                "schema": {
                  "$ref": "#/components/schemas/StreamingResponseBody"
                }
              }
            }
          }
        }
      }
    },
    "/api/plan/{id}/certificationofconformance": {
      "post": {
        "tags": [
          "certification-api"
        ],
        "summary": "Get certification of conformance pdf template, with pre-populated fields",
        "operationId": "getCertificationOfConformancePdfTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of test plan",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nameOfImplementer",
            "in": "query",
            "description": "Name of Entity (Implementer) Making this Certification",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deploymentVersion",
            "in": "query",
            "description": "Software or Service (Deployment) Name & Version #",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conformanceProfile",
            "in": "query",
            "description": "OpenID Conformance Profile",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "suiteSoftware",
            "in": "query",
            "description": "Conformance Test Suite Software",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testDate",
            "in": "query",
            "description": "Test Date",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "moreInfoUrl",
            "in": "query",
            "description": "URL at which people interested in using your implementation can learn about it and/or obtain it",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "implementationDescription",
            "in": "query",
            "description": "1-2 sentence description of the implementation",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programmingLanguage",
            "in": "query",
            "description": "The programming language of the software and deployment environment for it, if applicable",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "license",
            "in": "query",
            "description": "Licensing terms of the software, if applicable",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "An unexpected error occurred, the error should be reported to the developers"
          },
          "200": {
            "description": "Retrieved successfully"
          }
        }
      }
    },
    "/api/log/{id}/images": {
      "get": {
        "tags": [
          "image-api"
        ],
        "summary": "Get all the images for a test",
        "operationId": "getAllImages",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of test",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "In order to upload an image, You must be admin or test owner",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "image-api"
        ],
        "summary": "Upload image for a test log",
        "operationId": "uploadImageToNewLogEntry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of test",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "Description for image",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Uploaded image successfully",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Image validation failure",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "In order to upload an image, You must be admin or test owner",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/log/{id}/images/{placeholder}": {
      "post": {
        "tags": [
          "image-api"
        ],
        "summary": "Upload the image to existing log entry",
        "operationId": "uploadImageToExistingLogEntry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of test",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "placeholder",
            "in": "path",
            "description": "Placeholder which created when the test run",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "description": "Image should be encoded as a string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Uploaded image successfully",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Image validation failure",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "In order to upload an image, You must be admin or test owner",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/info/{id}/publish": {
      "post": {
        "tags": [
          "test-info-api"
        ],
        "summary": "Publish a test information",
        "operationId": "publishTestInfo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of test that you want to publish",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonObject"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Published successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "'publish' field is missing or its value is not JsonPrimitive",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "'publish' value is not valid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/jwks": {
      "get": {
        "tags": [
          "jwks-endpoint"
        ],
        "operationId": "getJwkSet",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/server": {
      "get": {
        "tags": [
          "server-info-ui-controller"
        ],
        "summary": "Get server information",
        "operationId": "getServerInfo",
        "responses": {
          "200": {
            "description": "Retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/runner/running": {
      "get": {
        "tags": [
          "test-runner"
        ],
        "summary": "Get list of running testIDs",
        "operationId": "getAllRunningTestIds",
        "responses": {
          "200": {
            "description": "Retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "uniqueItems": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/runner/browser/{id}": {
      "get": {
        "tags": [
          "test-runner"
        ],
        "summary": "Get front-channel external URLs exposed to the [BrowserControl] for a given test",
        "operationId": "getBrowserStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of test",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "503": {
            "description": "Couldn't find Browser information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "404": {
            "description": "The test you were trying to retrieve is not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/runner/available": {
      "get": {
        "tags": [
          "test-runner"
        ],
        "summary": "Get list of available TestModule names",
        "operationId": "getAvailableTests",
        "responses": {
          "200": {
            "description": "Retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/plan/{id}": {
      "get": {
        "tags": [
          "test-plan-api"
        ],
        "summary": "Get test plan information by plan id",
        "operationId": "getTestPlan",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of test plan",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "public",
            "in": "query",
            "description": "Published data only",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Couldn't find test plan for provided plan Id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "200": {
            "description": "Retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "test-plan-api"
        ],
        "summary": "Delete a test plan and related configuration. Requires the plan to be mutable.",
        "operationId": "deleteMutableTestPlan",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of test plan",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Could not find a plan with the given id, belonging to the user",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StreamingResponseBody"
                }
              }
            }
          },
          "204": {
            "description": "Deleted successfully",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StreamingResponseBody"
                }
              }
            }
          },
          "405": {
            "description": "The plan is immutable and cannot be deleted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StreamingResponseBody"
                }
              }
            }
          }
        }
      }
    },
    "/api/plan/info/{planName}": {
      "get": {
        "tags": [
          "test-plan-api"
        ],
        "summary": "Get information for one test plan by name",
        "operationId": "getTestPlanInfo",
        "parameters": [
          {
            "name": "planName",
            "in": "path",
            "description": "Plan name, use to identify a specific TestPlan ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Couldn't find test plan for provided plan name",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "200": {
            "description": "Retrieved successfully",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/plan/exporthtml/{id}": {
      "get": {
        "tags": [
          "log-api"
        ],
        "summary": "Export the full results for this plan as both html and json in a zip",
        "operationId": "exportPlanAsHTML",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of plan",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "public",
            "in": "query",
            "description": "Published data only",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Exported successfully",
            "content": {
              "application/zip": {
                "schema": {
                  "$ref": "#/components/schemas/StreamingResponseBody"
                }
              }
            }
          },
          "404": {
            "description": "Couldn't find given plan Id",
            "content": {
              "application/zip": {
                "schema": {
                  "$ref": "#/components/schemas/StreamingResponseBody"
                }
              }
            }
          }
        }
      }
    },
    "/api/plan/export/{id}": {
      "get": {
        "tags": [
          "log-api"
        ],
        "summary": "Export all test logs of plan by plan id",
        "operationId": "exportLogsOfPlan",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of plan",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "public",
            "in": "query",
            "description": "Published data only",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Exported successfully",
            "content": {
              "application/zip": {
                "schema": {
                  "$ref": "#/components/schemas/StreamingResponseBody"
                }
              }
            }
          },
          "404": {
            "description": "Couldn't find given plan Id",
            "content": {
              "application/zip": {
                "schema": {
                  "$ref": "#/components/schemas/StreamingResponseBody"
                }
              }
            }
          }
        }
      }
    },
    "/api/plan/available": {
      "get": {
        "tags": [
          "test-plan-api"
        ],
        "summary": "Get a list of available test plans and their attributes",
        "operationId": "getAvailableTestPlans",
        "responses": {
          "200": {
            "description": "Retrieved successfully",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/log": {
      "get": {
        "tags": [
          "log-api"
        ],
        "summary": "Get all test logs with paging",
        "description": "Return all published logs when public data is requested, otherwise all test logs if user is admin, or only the user's test logs",
        "operationId": "getAllTests",
        "parameters": [
          {
            "name": "public",
            "in": "query",
            "description": "Published data only",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PaginationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/log/{id}": {
      "get": {
        "tags": [
          "log-api"
        ],
        "summary": "Get test log of given testId",
        "operationId": "getLogResults",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of test",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "since",
            "in": "query",
            "description": "Since when test created",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "public",
            "in": "query",
            "description": "Published data only",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Document"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/log/exporthtml/{id}": {
      "get": {
        "tags": [
          "log-api"
        ],
        "summary": "Export test logs as html by test id",
        "operationId": "exportTestHtml",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of test",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "public",
            "in": "query",
            "description": "Published data only",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Couldn't find given test Id",
            "content": {
              "application/zip": {
                "schema": {
                  "$ref": "#/components/schemas/StreamingResponseBody"
                }
              }
            }
          },
          "200": {
            "description": "Exported successfully",
            "content": {
              "application/zip": {
                "schema": {
                  "$ref": "#/components/schemas/StreamingResponseBody"
                }
              }
            }
          }
        }
      }
    },
    "/api/log/export/{id}": {
      "get": {
        "tags": [
          "log-api"
        ],
        "summary": "Export test log by test id",
        "operationId": "export",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of test",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "public",
            "in": "query",
            "description": "Published data only",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Couldn't find given test Id",
            "content": {
              "application/zip": {
                "schema": {
                  "$ref": "#/components/schemas/StreamingResponseBody"
                }
              }
            }
          },
          "200": {
            "description": "Exported successfully",
            "content": {
              "application/zip": {
                "schema": {
                  "$ref": "#/components/schemas/StreamingResponseBody"
                }
              }
            }
          }
        }
      }
    },
    "/api/lastconfig": {
      "get": {
        "tags": [
          "saved-configuration-api"
        ],
        "summary": "Get last configuration of current user",
        "operationId": "getLastConfig",
        "responses": {
          "200": {
            "description": "Retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/info": {
      "get": {
        "tags": [
          "test-info-api"
        ],
        "summary": "Get information of all test module instances",
        "description": "Will return all run test modules if user is admin role, otherwise only the logged in user's tests will be returned. This API is currently disabled due to performance concerns. If you have a need for it, please email details of your use case to certification@oidf.org",
        "operationId": "getAllTests",
        "responses": {
          "200": {
            "description": "Retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/info/{id}": {
      "get": {
        "tags": [
          "test-info-api"
        ],
        "summary": "Get test information by test id",
        "operationId": "getTestInfo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of test",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "public",
            "in": "query",
            "description": "Published data only",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Couldn't find test information for provided testId",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "200": {
            "description": "Retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/currentuser": {
      "get": {
        "tags": [
          "user-info-ui-controller"
        ],
        "summary": "Get current user information",
        "operationId": "getCurrentUserInfo",
        "responses": {
          "200": {
            "description": "Retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/token/{id}": {
      "delete": {
        "tags": [
          "token-api"
        ],
        "summary": "Delete existing token by token Id",
        "operationId": "deleteToken",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of token, use to identify a specific token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Couldn't find provided token Id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "200": {
            "description": "Deleted token successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "JsonArray": {
        "type": "object",
        "properties": {
          "empty": {
            "type": "boolean"
          },
          "asBoolean": {
            "type": "boolean"
          },
          "asDouble": {
            "type": "number",
            "format": "double"
          },
          "asInt": {
            "type": "integer",
            "format": "int32"
          },
          "asLong": {
            "type": "integer",
            "format": "int64"
          },
          "asNumber": {
            "type": "number"
          },
          "asString": {
            "type": "string"
          },
          "asFloat": {
            "type": "number",
            "format": "float"
          },
          "asByte": {
            "type": "string",
            "format": "byte"
          },
          "asCharacter": {
            "type": "string",
            "deprecated": true
          },
          "asBigDecimal": {
            "type": "number"
          },
          "asBigInteger": {
            "type": "integer"
          },
          "asShort": {
            "type": "integer",
            "format": "int32"
          },
          "jsonPrimitive": {
            "type": "boolean"
          },
          "jsonObject": {
            "type": "boolean"
          },
          "asJsonObject": {
            "$ref": "#/components/schemas/JsonObject"
          },
          "jsonArray": {
            "type": "boolean"
          },
          "asJsonArray": {
            "$ref": "#/components/schemas/JsonArray"
          },
          "jsonNull": {
            "type": "boolean"
          },
          "asJsonPrimitive": {
            "$ref": "#/components/schemas/JsonPrimitive"
          },
          "asJsonNull": {
            "$ref": "#/components/schemas/JsonNull"
          }
        }
      },
      "JsonNull": {
        "type": "object",
        "properties": {
          "asBoolean": {
            "type": "boolean"
          },
          "asDouble": {
            "type": "number",
            "format": "double"
          },
          "asInt": {
            "type": "integer",
            "format": "int32"
          },
          "asLong": {
            "type": "integer",
            "format": "int64"
          },
          "jsonPrimitive": {
            "type": "boolean"
          },
          "jsonObject": {
            "type": "boolean"
          },
          "asJsonObject": {
            "$ref": "#/components/schemas/JsonObject"
          },
          "jsonArray": {
            "type": "boolean"
          },
          "asJsonArray": {
            "$ref": "#/components/schemas/JsonArray"
          },
          "jsonNull": {
            "type": "boolean"
          },
          "asJsonPrimitive": {
            "$ref": "#/components/schemas/JsonPrimitive"
          },
          "asJsonNull": {
            "$ref": "#/components/schemas/JsonNull"
          },
          "asNumber": {
            "type": "number"
          },
          "asString": {
            "type": "string"
          },
          "asFloat": {
            "type": "number",
            "format": "float"
          },
          "asByte": {
            "type": "string",
            "format": "byte"
          },
          "asCharacter": {
            "type": "string",
            "deprecated": true
          },
          "asBigDecimal": {
            "type": "number"
          },
          "asBigInteger": {
            "type": "integer"
          },
          "asShort": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "JsonObject": {
        "type": "object",
        "properties": {
          "empty": {
            "type": "boolean"
          },
          "asBoolean": {
            "type": "boolean"
          },
          "asDouble": {
            "type": "number",
            "format": "double"
          },
          "asInt": {
            "type": "integer",
            "format": "int32"
          },
          "asLong": {
            "type": "integer",
            "format": "int64"
          },
          "jsonPrimitive": {
            "type": "boolean"
          },
          "jsonObject": {
            "type": "boolean"
          },
          "asJsonObject": {
            "$ref": "#/components/schemas/JsonObject"
          },
          "jsonArray": {
            "type": "boolean"
          },
          "asJsonArray": {
            "$ref": "#/components/schemas/JsonArray"
          },
          "jsonNull": {
            "type": "boolean"
          },
          "asJsonPrimitive": {
            "$ref": "#/components/schemas/JsonPrimitive"
          },
          "asJsonNull": {
            "$ref": "#/components/schemas/JsonNull"
          },
          "asNumber": {
            "type": "number"
          },
          "asString": {
            "type": "string"
          },
          "asFloat": {
            "type": "number",
            "format": "float"
          },
          "asByte": {
            "type": "string",
            "format": "byte"
          },
          "asCharacter": {
            "type": "string",
            "deprecated": true
          },
          "asBigDecimal": {
            "type": "number"
          },
          "asBigInteger": {
            "type": "integer"
          },
          "asShort": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Configuration Json"
      },
      "JsonPrimitive": {
        "type": "object",
        "properties": {
          "asBoolean": {
            "type": "boolean"
          },
          "asDouble": {
            "type": "number",
            "format": "double"
          },
          "asInt": {
            "type": "integer",
            "format": "int32"
          },
          "asLong": {
            "type": "integer",
            "format": "int64"
          },
          "number": {
            "type": "boolean"
          },
          "boolean": {
            "type": "boolean"
          },
          "string": {
            "type": "boolean"
          },
          "asNumber": {
            "type": "number"
          },
          "asString": {
            "type": "string"
          },
          "asFloat": {
            "type": "number",
            "format": "float"
          },
          "asByte": {
            "type": "string",
            "format": "byte"
          },
          "asCharacter": {
            "type": "string",
            "deprecated": true
          },
          "asBigDecimal": {
            "type": "number"
          },
          "asBigInteger": {
            "type": "integer"
          },
          "asShort": {
            "type": "integer",
            "format": "int32"
          },
          "jsonPrimitive": {
            "type": "boolean"
          },
          "jsonObject": {
            "type": "boolean"
          },
          "asJsonObject": {
            "$ref": "#/components/schemas/JsonObject"
          },
          "jsonArray": {
            "type": "boolean"
          },
          "asJsonArray": {
            "$ref": "#/components/schemas/JsonArray"
          },
          "jsonNull": {
            "type": "boolean"
          },
          "asJsonPrimitive": {
            "$ref": "#/components/schemas/JsonPrimitive"
          },
          "asJsonNull": {
            "$ref": "#/components/schemas/JsonNull"
          }
        }
      },
      "StreamingResponseBody": {
        "type": "object"
      },
      "PaginationRequest": {
        "type": "object",
        "properties": {
          "draw": {
            "type": "integer",
            "format": "int32"
          },
          "start": {
            "type": "integer",
            "format": "int32"
          },
          "length": {
            "type": "integer",
            "format": "int32"
          },
          "search": {
            "type": "string"
          },
          "order": {
            "type": "string"
          }
        }
      },
      "Document": {
        "type": "object",
        "properties": {
          "empty": {
            "type": "boolean"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      }
    }
  }
}